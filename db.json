{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/mmnn/source/styles/app.scss","path":"styles/app.scss","modified":0},{"_id":"themes/mmnn/source/scripts/app.js","path":"scripts/app.js","modified":0},{"_id":"themes/mmnn/source/images/js.png","path":"images/js.png","modified":0},{"_id":"themes/mmnn/source/images/favicon.ico","path":"images/favicon.ico","modified":0},{"_id":"themes/mmnn/source/images/about.png","path":"images/about.png","modified":0},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/mmnn/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/font-awesome.scss","path":"bower_components/font-awesome/scss/font-awesome.scss","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/variables.less","path":"bower_components/font-awesome/less/variables.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/stacked.less","path":"bower_components/font-awesome/less/stacked.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/rotated-flipped.less","path":"bower_components/font-awesome/less/rotated-flipped.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/path.less","path":"bower_components/font-awesome/less/path.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/mixins.less","path":"bower_components/font-awesome/less/mixins.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/list.less","path":"bower_components/font-awesome/less/list.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/larger.less","path":"bower_components/font-awesome/less/larger.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/icons.less","path":"bower_components/font-awesome/less/icons.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/font-awesome.less","path":"bower_components/font-awesome/less/font-awesome.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/fixed-width.less","path":"bower_components/font-awesome/less/fixed-width.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/core.less","path":"bower_components/font-awesome/less/core.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/bordered-pulled.less","path":"bower_components/font-awesome/less/bordered-pulled.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/animated.less","path":"bower_components/font-awesome/less/animated.less","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.woff2","path":"bower_components/font-awesome/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.woff","path":"bower_components/font-awesome/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.ttf","path":"bower_components/font-awesome/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.svg","path":"bower_components/font-awesome/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.eot","path":"bower_components/font-awesome/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/FontAwesome.otf","path":"bower_components/font-awesome/fonts/FontAwesome.otf","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.min.css","path":"bower_components/font-awesome/css/font-awesome.min.css","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.css.map","path":"bower_components/font-awesome/css/font-awesome.css.map","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.css","path":"bower_components/font-awesome/css/font-awesome.css","modified":0},{"_id":"themes/mmnn/source/bower_components/font-awesome/bower.json","path":"bower_components/font-awesome/bower.json","modified":0},{"_id":"themes/mmnn/source/bower_components/bourbon/bower.json","path":"bower_components/bourbon/bower.json","modified":0},{"_id":"themes/mmnn/source/bower_components/bourbon/README.md","path":"bower_components/bourbon/README.md","modified":0},{"_id":"themes/mmnn/source/bower_components/bourbon/LICENSE.md","path":"bower_components/bourbon/LICENSE.md","modified":0}],"Cache":[{"_id":"source/_posts/ES6-In-Practice-0-watch-a-demo.md","shasum":"a9c5b2dad39f4433b202e77681a4b8c47b595fbb","modified":1436510419747},{"_id":"source/_posts/JavaScript-For-Kids-This.md","shasum":"515bcef5677fc916dd2ebc7c4a7147d7fa137c8b","modified":1436510599019},{"_id":"source/_posts/Scope-0-What-Is-Scope.md","shasum":"86b39971407134d1af3f593c4ae15623c6e51d18","modified":1436509916199},{"_id":"source/_posts/Scope-1-Nested-Scope.md","shasum":"001b355099963050adf662e72381d72c4c8df0c9","modified":1436509924675},{"_id":"source/_posts/google-chrome-Devtools-Overview.md","shasum":"92ccb80b95b4fe00ed046b2a6c218f34eaa01c36","modified":1436984256406},{"_id":"source/_posts/gulp-in-practice.md","shasum":"ac38262be56b5ac6e24d95df0040f42d8f6f5e34","modified":1436510537291},{"_id":"themes/mmnn/LICENSE","shasum":"f654cbe971a8f3e7287a5f87810e4e8369415ab1","modified":1434458687684},{"_id":"themes/mmnn/README.md","shasum":"7392aa95800882b657203a81b9227f5f39406f95","modified":1434458917520},{"_id":"themes/mmnn/_config.yml","shasum":"d68d9fb540a4f1e5dd333f4cfefdc6d5071a35b7","modified":1437015906536},{"_id":"themes/mmnn/bower.json","shasum":"1cc45499b1b7d6d7772b4290c49e0381c04a9a70","modified":1433429226126},{"_id":"themes/mmnn/layout/_mixins/article.jade","shasum":"eb4d31f71f9ceeb2283fb5536b5fd2dc1bc92ba9","modified":1433513245021},{"_id":"themes/mmnn/layout/_partial/archive.jade","shasum":"08b14f777f6e33e19e8868d570a3507e43235401","modified":1436510984431},{"_id":"themes/mmnn/layout/_partial/article/article-comment.jade","shasum":"78bf4de502f5a30c48f6efc3deb0a81d767e5ca4","modified":1433753226855},{"_id":"themes/mmnn/layout/_partial/article/article-footer.jade","shasum":"2021bdc3c97ff3d3b4a9743662b378946f920367","modified":1433827991435},{"_id":"themes/mmnn/layout/_partial/article/article-inner.jade","shasum":"71f8d064e1d28530792c622dd7e3b2f09be1093f","modified":1436982295870},{"_id":"themes/mmnn/layout/_partial/article/article-meta.jade","shasum":"9075eeb1cbec339b836ac0ee3b56f27572e8ad6c","modified":1433510323377},{"_id":"themes/mmnn/layout/_partial/article/article-page-nav.jade","shasum":"cbfa8f19270049c5b0cc0b506d23efcd40bb8396","modified":1433612992737},{"_id":"themes/mmnn/layout/_partial/article.jade","shasum":"94bcd177e994787c24fc995d97f4bda1d919d19c","modified":1433611951497},{"_id":"themes/mmnn/layout/_partial/document-thing/html-footer.jade","shasum":"6e1dbbc70e213b6e62684e543bd79d56314c95b6","modified":1433812093559},{"_id":"themes/mmnn/layout/_partial/document-thing/html_head.jade","shasum":"5b71addd082f08ba5625a40c852d82069ccd1f7e","modified":1437119182877},{"_id":"themes/mmnn/layout/_partial/footer.jade","shasum":"69c061a4fd4e620210c3cd3148f8add845d1ccb7","modified":1433559862897},{"_id":"themes/mmnn/layout/_partial/header.jade","shasum":"8c3ee5a1417ea645d663b83eded7d3c7e201d1f6","modified":1437119075533},{"_id":"themes/mmnn/layout/_widget/back-to-top.jade","shasum":"90b11595bd0fa530e9e86fbe82d0dd3f049660cc","modified":1433810834695},{"_id":"themes/mmnn/layout/_widget/baidu-analytics.jade","shasum":"7e24afca2c2c43c472df47ede5091ef2106cb4e2","modified":1433838255819},{"_id":"themes/mmnn/layout/_widget/google-analytics.jade","shasum":"a65fecfc9ef01a043f05a6d62c8bff5a1f862aa5","modified":1433834642023},{"_id":"themes/mmnn/layout/archive.jade","shasum":"6258347464261ee14831214277e7bf08a6e27fd1","modified":1434636102322},{"_id":"themes/mmnn/layout/category.jade","shasum":"f8c9a780b7f88d0ee31de29334ecb73988c52fec","modified":1436496850691},{"_id":"themes/mmnn/layout/index.jade","shasum":"9e5e8b8f6dded907e0e6a367025b51d7bccc72ac","modified":1434636046358},{"_id":"themes/mmnn/layout/layout.jade","shasum":"85263c243bee44fd19d7973ad2cb7ed0cca6dfb6","modified":1433821012099},{"_id":"themes/mmnn/layout/post.jade","shasum":"38548ad1cdfa4922033535bbeb5cf4f82cac51ab","modified":1433773482971},{"_id":"themes/mmnn/source/bower_components/bourbon/LICENSE.md","shasum":"92849dc592077765ca1d77c599bcac6db30a7bc1","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/README.md","shasum":"c17349869c753d33fb02fb5fae6e93d2d6224c74","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","shasum":"0b922e87aa21e2b1a76e837d93ba74671907f4c6","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/_bourbon.scss","shasum":"f9da26b5fad2efad8b1f5220c1254fd942681a08","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_border-color.scss","shasum":"9860c23ab48ca81d5f05d476df0d6afdf57adb71","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_border-radius.scss","shasum":"ba4515b15262313405315fdb7fe56fe139197a8a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_border-style.scss","shasum":"7c6e1307fd93609718c78c34b60a77269de365ed","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_border-width.scss","shasum":"a58e9a15f1ac6729785c58b4d9ec4ae92bb5f97a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_buttons.scss","shasum":"bfbe54076931fd77300878e40b02829838d0a0d6","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_clearfix.scss","shasum":"b617ea1d7a1a909a3dd776b3d91a8bae1bb41e7a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_ellipsis.scss","shasum":"19fd1d9bcd823f6e5cec43a1dad79dfe244b7f88","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","shasum":"0686e4eb3729357cef20a5e487a4d3592537b139","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_hide-text.scss","shasum":"b4f1cf213c597f068116f508d874961cd473ca8d","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_margin.scss","shasum":"c517f84b3853c6c88653bc049024ccada019428f","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_padding.scss","shasum":"1321b0158a5571edf7d9caa98b58ee650e78fd0b","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_position.scss","shasum":"21bb677dd580766920df96c06c2bc46c5a9df0f7","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_prefixer.scss","shasum":"e920e79b2c614ce9c475c01b33115a6bddcd4796","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_retina-image.scss","shasum":"c6abba728e109eabdb60bb97551907371a34904b","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_size.scss","shasum":"935d06ef7819865113a6f8c130ac40bd9f0477d6","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_text-inputs.scss","shasum":"6dbbda88d32fd9b344a0aba3fa79138b340076fc","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_timing-functions.scss","shasum":"421f95151db098b37d7b335590de2789ae1c9dce","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_triangle.scss","shasum":"4902e87a4c4df2cf9453de5e9115ac6a51daf3aa","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/addons/_word-wrap.scss","shasum":"f341772a362f1fb2cb5b70ad6a6f5bdc4f8e37b8","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_animation.scss","shasum":"9b373893735c2198c476e73be3abdab0b3194cf1","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_appearance.scss","shasum":"3e3b77ca8717a4a8fb3d4309b1db9fd8a47d2dca","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss","shasum":"7587d5653fa2b48af9371d2b63a2a666ac6ac928","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_background-image.scss","shasum":"316cf255f87e0b707b791851368c69107e69dcd2","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_background.scss","shasum":"ff5e2c2762337f29e592def5231a75c5cb8c4fa7","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_border-image.scss","shasum":"e42b028664d52afa8d3f5a482d117f2fde397b5a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_calc.scss","shasum":"439d47eeb03de4e5b437294062bf159ffddd0c19","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_columns.scss","shasum":"7ce72624f57842df999962a0bc4ef0280cca9398","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_filter.scss","shasum":"13329c9db58a01cc26f6aeeb4f0476c828ab0abf","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_flex-box.scss","shasum":"87ccfa45ffc30e7fdd953375cac3eb7594f026dd","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_font-face.scss","shasum":"9f0b00845e05f31345cc3bd72939b9f9979b68c2","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss","shasum":"5427a54b753002ef860a1221b59b67c9f3ce44a4","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss","shasum":"a93b1afebe03b9f492d8ed484eb5be37a374ad3e","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_hyphens.scss","shasum":"c12f121e804479099d1faa7e48ba5f961cba2e29","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_image-rendering.scss","shasum":"ccff8a9ed711e7bdd7ee469b0d038876fcac88f7","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_keyframes.scss","shasum":"e704004ac7d3f1b3d68ac21c44323fedf7a81304","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","shasum":"2c4243a915e493d3517f31e6f5f98e4269a5edf9","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_perspective.scss","shasum":"f53b7eac7c6befd491c619be847fa92b4c2231e7","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_placeholder.scss","shasum":"981d9aab731cf07ea2d4732a0fcbe92bd0d41103","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","shasum":"d837c21c859568b27ab70f28e8bbb73ef25f53f4","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_selection.scss","shasum":"779a038f6f2b5f3bb91a236507ef41366c1b5e47","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_text-decoration.scss","shasum":"97f8da21b2e59e79b35000c130d6b85e440f5c90","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_transform.scss","shasum":"1ad7b69a136697102ee52d6724d6929a0c3e61ff","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_transition.scss","shasum":"982e26223800c15b2409310c32a4a43f8b992ba5","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/css3/_user-select.scss","shasum":"2d413db6645a8aefe9f2439edc11f4d207f44337","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss","shasum":"b6c83dee15274d4871da4c1379a771cfdc4d205b","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss","shasum":"c67817e3a09a0c1cf6f159facb13f916e8580082","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_contains.scss","shasum":"d64fcf7cfdae99611f9eecd7c90f799ef10978a3","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_is-length.scss","shasum":"3952d14f011e9ea003297727e72c280967f4406e","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_is-light.scss","shasum":"a38a0d5f844b054e67640aa48e5fca8f326be04d","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_is-number.scss","shasum":"c426c14e7c9592d5ece9139dbd4120248de7416a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_is-size.scss","shasum":"ea4998a7daa7bc26feb8f3239a32a11f91620f5a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_modular-scale.scss","shasum":"7eb74452ac21f3066c64c26835438297ca58a414","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","shasum":"0da24812a07f03e927416ec2f5cbad777bead388","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","shasum":"558a15780f9acbdee782a917af41b325a71864d3","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_shade.scss","shasum":"847e7baa09a6ace4613d631db2f7df434de2ac6e","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_strip-units.scss","shasum":"ff553ea6a63eb00cb6f29812da8d1aca596bf2ab","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_tint.scss","shasum":"cb3d01821a0fa30f1fc9258e7987dea492d44581","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss","shasum":"1e84a7f8952b0a7f00c25b6f2a2e718101e9b73d","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/functions/_unpack.scss","shasum":"df04f793cf7c914280514c90e33ab473cb903e16","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_convert-units.scss","shasum":"bcfa81efefc438508aab09cf6926fca659b5fd4b","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_directional-values.scss","shasum":"89379030b070d7e6ba9d6c5aedf4a5d741078522","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss","shasum":"8229bfb63ba7c55531b47dadbd9127ffdf119d7e","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss","shasum":"e9c38cd6e39ec6f0701612aacb981087cff772f0","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss","shasum":"bae1bc0787fb466fcb569590b80a2bbf8d06d983","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss","shasum":"8907bbddbb9d96f62cc09696c563ccb5c1fc59cb","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss","shasum":"9c25265a862b50950848ad3186ec3ffcebe72a1f","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss","shasum":"ea3b65fb4e9ec6143e5e68c86f8e2a63bd5bf2e8","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss","shasum":"97ee98f0628f1a9aa6f8631bdec9d9310097fab0","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss","shasum":"648a0d39c4e7738ab04943f2764352b48e21e9d0","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss","shasum":"b9f8a3aeaee3c73e535b04ea03640ba1ad71ec4e","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss","shasum":"2cf125287b28e46c3ecaa3bcab7a959536ea7a23","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss","shasum":"d236801e46a03c7f93d27e90c5bd760e760d5847","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss","shasum":"040b56954a19e7f409e44c2dac78259d60359982","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss","shasum":"72c1da4bbddf8d5b6b28db84b834c529e4a86e2f","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/settings/_prefixer.scss","shasum":"e016bbe4e404715644619f806f58262fdff92e14","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/app/assets/stylesheets/settings/_px-to-em.scss","shasum":"14880c373629b1e71abf17d6dc147ca56126856a","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/bourbon/bower.json","shasum":"0043cfb6a61aacc80e4a38ce8c348dc667865587","modified":1431112815000},{"_id":"themes/mmnn/source/bower_components/font-awesome/bower.json","shasum":"96e196c760c71835880ddcce3f9ee8e0181c0720","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.css","shasum":"2148b3dddca54f413e8ba50aa48b53b400bd99b8","modified":1433430374130},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.css.map","shasum":"0189d278706509412bac4745f96c83984e1d59f4","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/css/font-awesome.min.css","shasum":"8c15c6bd82c71e9ef1bb11cf24e502fe07518ac5","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.eot","shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.woff2","shasum":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/animated.less","shasum":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/bordered-pulled.less","shasum":"0469b430cd1567145ba800b22537588be2d1934d","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/core.less","shasum":"28a1cef1326b3ec309dd6bd40794277ebdf8203a","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/fixed-width.less","shasum":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/font-awesome.less","shasum":"01e7881cf0678c71dd94297fa185ba6cb0395460","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/icons.less","shasum":"9275cddbfa0de814e2101ba712c36c6d3ad07db9","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/larger.less","shasum":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/list.less","shasum":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/mixins.less","shasum":"f3c8a37970571c365deeb86256ea62f8342e0695","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/path.less","shasum":"47108f118b6a9643774b718dd4c56f4c81ce681b","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/rotated-flipped.less","shasum":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/stacked.less","shasum":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/less/variables.less","shasum":"6b4d6a74d5491ec667c1ddf7eb19b34ead46947f","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_animated.scss","shasum":"8daf189b2f8a404495b8424b6fd1ba630dd1c2dc","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_bordered-pulled.scss","shasum":"e79168c54a9d1c1732bea399ead2c1b8f5489782","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_core.scss","shasum":"72c2b0e35444d29f44ab9067ae5b8ebe981fb325","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_fixed-width.scss","shasum":"224417ca266c657849afb2bbcb6dc455894ff387","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_icons.scss","shasum":"5e2306475e8676dcdef3a05913f5309527824923","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_larger.scss","shasum":"940e1c5ebc690283bfaee92560cf15fabedbf6a9","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_list.scss","shasum":"4b53ee01513df8b9ce76442b2d8f1851613a435c","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_mixins.scss","shasum":"9b591c730ba30216d27c13ab771f2939761878c8","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_path.scss","shasum":"080158aeb1bf6df59ec98b2bbed44da61d9c9ca3","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_rotated-flipped.scss","shasum":"ca08a0af3da63c2f2a7d3c27a8747637744cc785","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_stacked.scss","shasum":"cf6752ee609af36eb293a7197c88d31ecacbbc74","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/_variables.scss","shasum":"b2586369d534a76d40bdba207c75cf3e0ca62624","modified":1433430805650},{"_id":"themes/mmnn/source/bower_components/font-awesome/scss/font-awesome.scss","shasum":"009f3893402ac2a4f6bcd5ccf15a4ccd66e71d9e","modified":1421950182000},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.eot","shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1421950182000},{"_id":"themes/mmnn/source/images/about.png","shasum":"7eacf29d35589b7d8cca002933a1551764435e9d","modified":1428203792000},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.woff2","shasum":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1421950182000},{"_id":"themes/mmnn/source/images/favicon.ico","shasum":"e5d235444ff1b14fd5dd315fbdf476b5fb753636","modified":1433815229243},{"_id":"themes/mmnn/source/images/js.png","shasum":"fc1a2cdb5d7e0f8c45714c99c3d3002af08e3b7a","modified":1436506133543},{"_id":"themes/mmnn/source/scripts/app.js","shasum":"6f4999fd416756016326449b4e50267a035f74a2","modified":1433818918651},{"_id":"themes/mmnn/source/styles/app.scss","shasum":"a867887be90b07f0445f63ed5faca4fa4bfd0b36","modified":1436549958153},{"_id":"themes/mmnn/source/styles/modules/_archive.scss","shasum":"0080f4145435d0a2f845eace969083d3d7992b28","modified":1436510933911},{"_id":"themes/mmnn/source/styles/modules/_article.scss","shasum":"32ccf26d3b22b61466dd6676592bf55fdb3057d1","modified":1433824119631},{"_id":"themes/mmnn/source/styles/modules/_base.scss","shasum":"a1ba6a5717b117b0507bf148281eca30091079a8","modified":1434641871522},{"_id":"themes/mmnn/source/styles/modules/_footer.scss","shasum":"b5256dd4b17770125f6be8e04cf06693204991d1","modified":1434641817342},{"_id":"themes/mmnn/source/styles/modules/_header.scss","shasum":"e01b5bd74f2e9d440568de3e62c1ad2fbd8267c4","modified":1437119126489},{"_id":"themes/mmnn/source/styles/modules/_prettify.scss","shasum":"325dfa41259e712721a09247f03bd3707ed093ce","modified":1436496000647},{"_id":"themes/mmnn/source/styles/modules/_variables.scss","shasum":"f905d6d5902c2abd5829cb44b3d986accca7e089","modified":1436506395063},{"_id":"themes/mmnn/source/styles/modules/article/_article-footer.scss","shasum":"802e732d581d1112564e8451dac081940e8ab289","modified":1436498334515},{"_id":"themes/mmnn/source/styles/modules/article/_article-header.scss","shasum":"40bb176a6392719a6e2898a21436f47b4e515686","modified":1436983632906},{"_id":"themes/mmnn/source/styles/modules/article/_article-inner.scss","shasum":"cb41cf8f71ded80a85d06a6ee53efcfc2d72a863","modified":1436982591578},{"_id":"themes/mmnn/source/styles/modules/article/_article-meta.scss","shasum":"8ba89b0680b9398dc519eeb46d288ad15ebfb289","modified":1436983606846},{"_id":"themes/mmnn/source/styles/modules/article/_article-page-nav.scss","shasum":"76887df5bb484c7f47d410598f27df76eebd5bee","modified":1433823203355},{"_id":"themes/mmnn/source/styles/modules/article/_article.scss","shasum":"f4f78d5f4bcce33a55d082366948382f720805fb","modified":1437016316749},{"_id":"themes/mmnn/source/styles/util/_mixins.scss","shasum":"3e099dfca497664b9ab9ab3bd9423232e0e05259","modified":1433822274399},{"_id":"themes/mmnn/source/styles/util/_normalize.scss","shasum":"e58275a588bb631a37a2988145eea231ed23176b","modified":1427761612000},{"_id":"themes/mmnn/source/styles/widget/_back-to-top.scss","shasum":"ea76326c793c2f2eeb33ddb5c500120df0c333a8","modified":1433829844295},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/FontAwesome.otf","shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.ttf","shasum":"9088143b19979779b2116cef38b661f72d982e19","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.woff","shasum":"56ce13e71c2150d81bc972940584915181bd6081","modified":1421950182000},{"_id":"themes/mmnn/source/fonts/FontAwesome.otf","shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1421950182000},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.ttf","shasum":"9088143b19979779b2116cef38b661f72d982e19","modified":1421950182000},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.woff","shasum":"56ce13e71c2150d81bc972940584915181bd6081","modified":1421950182000},{"_id":"themes/mmnn/source/bower_components/font-awesome/fonts/fontawesome-webfont.svg","shasum":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1421950182000},{"_id":"themes/mmnn/source/fonts/fontawesome-webfont.svg","shasum":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1421950182000},{"_id":"public/styles/app.css","modified":1437118854140,"shasum":"d7b1813c4e982c537b32d9ddb95c98c28eb6ced3"},{"_id":"public/scripts/app.js","modified":1437118854212,"shasum":"6f4999fd416756016326449b4e50267a035f74a2"},{"_id":"public/images/js.png","modified":1437118854220,"shasum":"fc1a2cdb5d7e0f8c45714c99c3d3002af08e3b7a"},{"_id":"public/images/favicon.ico","modified":1437118854226,"shasum":"e5d235444ff1b14fd5dd315fbdf476b5fb753636"},{"_id":"public/images/about.png","modified":1437118854228,"shasum":"7eacf29d35589b7d8cca002933a1551764435e9d"},{"_id":"public/fonts/fontawesome-webfont.woff2","modified":1437118854231,"shasum":"1075231650f579955905bb2f6527148a8e2b4b16"},{"_id":"public/fonts/fontawesome-webfont.woff","modified":1437118854236,"shasum":"56ce13e71c2150d81bc972940584915181bd6081"},{"_id":"public/fonts/fontawesome-webfont.ttf","modified":1437118854240,"shasum":"9088143b19979779b2116cef38b661f72d982e19"},{"_id":"public/fonts/fontawesome-webfont.svg","modified":1437118854245,"shasum":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639"},{"_id":"public/fonts/fontawesome-webfont.eot","modified":1437118854251,"shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167"},{"_id":"public/fonts/FontAwesome.otf","modified":1437118854263,"shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4"},{"_id":"public/bower_components/font-awesome/scss/font-awesome.css","modified":1437118854296,"shasum":"4f4fe810961072d497db93f74d4aad735e5729f0"},{"_id":"public/bower_components/font-awesome/less/variables.less","modified":1437118854333,"shasum":"6b4d6a74d5491ec667c1ddf7eb19b34ead46947f"},{"_id":"public/bower_components/font-awesome/less/stacked.less","modified":1437118854335,"shasum":"f044077bc8be1a989c245254e81eb084d52d29a7"},{"_id":"public/bower_components/font-awesome/less/rotated-flipped.less","modified":1437118854336,"shasum":"95de5de9009714692430b04f9cd4388be8fba8f3"},{"_id":"public/bower_components/font-awesome/less/path.less","modified":1437118854339,"shasum":"47108f118b6a9643774b718dd4c56f4c81ce681b"},{"_id":"public/bower_components/font-awesome/less/mixins.less","modified":1437118854341,"shasum":"f3c8a37970571c365deeb86256ea62f8342e0695"},{"_id":"public/bower_components/font-awesome/less/list.less","modified":1437118854342,"shasum":"f53bc20884a1410d950b4a36a330c5181a8b55ab"},{"_id":"public/bower_components/font-awesome/less/larger.less","modified":1437118854343,"shasum":"e7119e82dc50540dbc3472bba7d74282815a7ecc"},{"_id":"public/bower_components/font-awesome/less/icons.less","modified":1437118854345,"shasum":"9275cddbfa0de814e2101ba712c36c6d3ad07db9"},{"_id":"public/bower_components/font-awesome/less/font-awesome.less","modified":1437118854348,"shasum":"01e7881cf0678c71dd94297fa185ba6cb0395460"},{"_id":"public/bower_components/font-awesome/less/fixed-width.less","modified":1437118854350,"shasum":"ec0c24b97184dab86177660f486b8d08cd636c42"},{"_id":"public/bower_components/font-awesome/less/core.less","modified":1437118854352,"shasum":"28a1cef1326b3ec309dd6bd40794277ebdf8203a"},{"_id":"public/bower_components/font-awesome/less/bordered-pulled.less","modified":1437118854354,"shasum":"0469b430cd1567145ba800b22537588be2d1934d"},{"_id":"public/bower_components/font-awesome/less/animated.less","modified":1437118854356,"shasum":"421f2c4e10191f148c13b8a34e5ff3f484d4c393"},{"_id":"public/bower_components/font-awesome/fonts/fontawesome-webfont.woff2","modified":1437118854359,"shasum":"1075231650f579955905bb2f6527148a8e2b4b16"},{"_id":"public/bower_components/font-awesome/fonts/fontawesome-webfont.woff","modified":1437118854362,"shasum":"56ce13e71c2150d81bc972940584915181bd6081"},{"_id":"public/bower_components/font-awesome/fonts/fontawesome-webfont.ttf","modified":1437118854365,"shasum":"9088143b19979779b2116cef38b661f72d982e19"},{"_id":"public/bower_components/font-awesome/fonts/fontawesome-webfont.svg","modified":1437118854369,"shasum":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639"},{"_id":"public/bower_components/font-awesome/fonts/fontawesome-webfont.eot","modified":1437118854372,"shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167"},{"_id":"public/bower_components/font-awesome/fonts/FontAwesome.otf","modified":1437118854377,"shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4"},{"_id":"public/bower_components/font-awesome/css/font-awesome.min.css","modified":1437118854380,"shasum":"8c15c6bd82c71e9ef1bb11cf24e502fe07518ac5"},{"_id":"public/bower_components/font-awesome/css/font-awesome.css.map","modified":1437118854381,"shasum":"0189d278706509412bac4745f96c83984e1d59f4"},{"_id":"public/bower_components/font-awesome/css/font-awesome.css","modified":1437118854382,"shasum":"2148b3dddca54f413e8ba50aa48b53b400bd99b8"},{"_id":"public/bower_components/font-awesome/bower.json","modified":1437118854384,"shasum":"c9535107be48f54b77a5769cd057eff59f9f7db7"},{"_id":"public/bower_components/bourbon/bower.json","modified":1437118854385,"shasum":"9aee1d7f73b121bcf03dfd7a7b3a3f0f3202dab9"},{"_id":"public/bower_components/bourbon/README.html","modified":1437118854501,"shasum":"4313c193964c2a9fd384bcae387e98fd91d5fe31"},{"_id":"public/bower_components/bourbon/LICENSE.html","modified":1437118854505,"shasum":"8eb6830b873b82f9c2eef55c1cccb5244b73974e"},{"_id":"public/2015/07/16/google-chrome-Devtools-Overview/index.html","modified":1437118854786,"shasum":"e72e8bb0f6c4c6c88bfb88080b0042fb9c489d69"},{"_id":"public/2015/07/09/Scope-1-Nested-Scope/index.html","modified":1437118854877,"shasum":"f4770b427329144ec2208b3331d5f19fac8db45c"},{"_id":"public/2015/07/06/Scope-0-What-Is-Scope/index.html","modified":1437118854952,"shasum":"9c9a1518fa0d5268bc4da479d418af176f6f9acf"},{"_id":"public/2015/06/18/ES6-In-Practice-0-watch-a-demo/index.html","modified":1437118855029,"shasum":"cf6252f4a70f2ca5cf86deeb7fba074fc35cca0c"},{"_id":"public/2015/06/11/gulp-in-practice/index.html","modified":1437118855099,"shasum":"af643391331ab13b67f3aa8b224d09e7a16aaeff"},{"_id":"public/2015/06/09/JavaScript-For-Kids-This/index.html","modified":1437118855183,"shasum":"28aa78467778095953f436b2c0f56731ceacbac6"},{"_id":"public/archives/index.html","modified":1437118855251,"shasum":"64451950980b9f404dcefdc636fdf0d652d5ddee"},{"_id":"public/archives/2015/index.html","modified":1437118855322,"shasum":"fe47f79492c11c410bd4a1d421b3e9281f7e8150"},{"_id":"public/archives/2015/06/index.html","modified":1437118855386,"shasum":"6c7d3647ff013b62c872a360ccb62aab384800d2"},{"_id":"public/archives/2015/07/index.html","modified":1437118855449,"shasum":"c79f0776ca9e3c77dc5eae67c1af99493312f11c"},{"_id":"public/categories/JavaScript/index.html","modified":1437118855509,"shasum":"c739fab293320676fee16d7c186231cec06ff637"},{"_id":"public/categories/FrontEnd/index.html","modified":1437118855570,"shasum":"6fca520deb19296b7eedc7b494dd98ff3367fdaf"},{"_id":"public/categories/Tools/index.html","modified":1437118855630,"shasum":"4a65b1e3fb885671a319a64518d2ef6cdd1b0e8c"},{"_id":"public/atom.xml","modified":1437118855631,"shasum":"1220dd6336abda18455ef8363381d7474ace7d00"},{"_id":"public/index.html","modified":1437118855768,"shasum":"495d6060e716af13825784749142fa4654305d3f"},{"_id":"public/page/2/index.html","modified":1437118855872,"shasum":"e1a6901fa1e461807ef1b279c704c338ade9c82f"},{"_id":"public/page/3/index.html","modified":1437118855981,"shasum":"3dff4307690c61283607203412c803beacb45cbe"},{"_id":"public/tags/ES6/index.html","modified":1437118856040,"shasum":"ce90c86318aceb0923abc1db890654e337635a90"},{"_id":"public/tags/gulp/index.html","modified":1437118856101,"shasum":"6407a7990c649c30dcfa18163928cdae8208b63e"},{"_id":"public/tags/google-chrome/index.html","modified":1437118856158,"shasum":"2fc0884c9dd8e1b56a6fe310d4b3c36f773e4bdc"},{"_id":"public/tags/devtools/index.html","modified":1437118856216,"shasum":"7e49c5e3feedf204668637002496e62bdefb202b"},{"_id":"public/tags/scope/index.html","modified":1437118856273,"shasum":"947f28cb60b1c7ed1e4ea7939a90f2241c12ce6f"},{"_id":"public/tags/作用域/index.html","modified":1437118856329,"shasum":"138d33ab98014d74b0b2491e518b5fb5aca32784"},{"_id":"public/tags/This/index.html","modified":1437118856383,"shasum":"51e83a117ff36def1d82eaeda65a4b4ea62ab4b1"}],"Category":[{"name":"JavaScript","_id":"cic7bgk340001td323iwidy53"},{"name":"FrontEnd","_id":"cic7bgk3h0006td32yah2cvtf"},{"name":"Tools","_id":"cic7bgk5h000btd325sznpzz4"}],"Data":[],"Page":[],"Post":[{"title":"ES6 In Practice(0) - watch a demo","author":"Drake Leung","date":"2015-06-18T08:02:11.000Z","description":"通过视频JavaScript 2015来实践一个demo, 利用的包管理器是jspm.","_content":"\n吃完半个西瓜，太饱。于是上yutube，然后搜了`es6 tutorial`，发现了一个30k+ views的[JavaScript In 2015](https://youtu.be/iukBMY4apvI)视频。遂看，**收货良多**。\n\n## live-server\n[live-server](https://www.npmjs.com/package/live-server)这个package，可以帮助我们快速建立一个可以**live reload**的静态服务器。\n\n## jspm\n[jspm](http://jspm.io/)是一个package manager，可以帮助我们快速建立ES6的使用环境。让我们来看一下官方文档的[getting start](https://github.com/jspm/jspm-cli/wiki/Getting-Started)\n\n```html\n <!doctype html>\n  // 需要引入这2个js文件\n  <script src=\"jspm_packages/system.js\"></script>\n  <script src=\"config.js\"></script>\n\n  // 下面是我们自己的js文件\n  <script>\n    System.import('lib/main');\n  </script>\n```\n\n## reddit api\n这里用了一个[jsonp](https://www.npmjs.com/package/jsonp) package，来发起jsonp请求。我们使用`jspm install npm:jsonp`来安装。\n\n**使用reddit api**: 只要在每个`r`后面加`.json`。比如: `https://www.reddit.com/r/pics.json`。然后还要传`param: 'jsonp'`的参数。\n\n```javascript\nclass RedditApi {\n  constructor() {\n    this.redditURL = 'https://www.reddit.com/r/pics.json';\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      jsonp(this.redditURL, {param: 'jsonp'}, (err, data) => {\n        err ? reject(err) : resolve(data.data.children);\n      });\n    });\n  }\n}\n```\n说到API，突然想起[codeacademy](http://www.codecademy.com/learn)上面好像又好多教学，赶紧去一下先。\n\n## Extract Pictures\n利用`Array.map`和`Array.filter`来获取和过滤图片。以前一直不知道这２个函数怎么用。\n```javascript\nexport default (posts) => {\n  return posts\n    .map(post => post.data.url)\n    .filter(url => /png$/.exec(url));\n}\n```\n\n## Display Picture\n利用了`Array.map`和`Array.json`来生成要插入的HTML string。如果我写的话，可以会用循环 = =　果然看多别人的代码还是好的。\n\n```javascript\nexport default (urls) => {\n  var pics = document.querySelector('.pics');\n  pics.innerHTML = urls.map(url => `<img src=${url}>`).join('\\n');\n}\n```\n","source":"_posts/ES6-In-Practice-0-watch-a-demo.md","raw":"title: ES6 In Practice(0) - watch a demo\nauthor: Drake Leung\ndate: 2015-06-18 16:02:11\ntags: ES6\ncategories: JavaScript\ndescription:\n  通过视频JavaScript 2015来实践一个demo, 利用的包管理器是jspm.\n---\n\n吃完半个西瓜，太饱。于是上yutube，然后搜了`es6 tutorial`，发现了一个30k+ views的[JavaScript In 2015](https://youtu.be/iukBMY4apvI)视频。遂看，**收货良多**。\n\n## live-server\n[live-server](https://www.npmjs.com/package/live-server)这个package，可以帮助我们快速建立一个可以**live reload**的静态服务器。\n\n## jspm\n[jspm](http://jspm.io/)是一个package manager，可以帮助我们快速建立ES6的使用环境。让我们来看一下官方文档的[getting start](https://github.com/jspm/jspm-cli/wiki/Getting-Started)\n\n```html\n <!doctype html>\n  // 需要引入这2个js文件\n  <script src=\"jspm_packages/system.js\"></script>\n  <script src=\"config.js\"></script>\n\n  // 下面是我们自己的js文件\n  <script>\n    System.import('lib/main');\n  </script>\n```\n\n## reddit api\n这里用了一个[jsonp](https://www.npmjs.com/package/jsonp) package，来发起jsonp请求。我们使用`jspm install npm:jsonp`来安装。\n\n**使用reddit api**: 只要在每个`r`后面加`.json`。比如: `https://www.reddit.com/r/pics.json`。然后还要传`param: 'jsonp'`的参数。\n\n```javascript\nclass RedditApi {\n  constructor() {\n    this.redditURL = 'https://www.reddit.com/r/pics.json';\n  }\n\n  load() {\n    return new Promise((resolve, reject) => {\n      jsonp(this.redditURL, {param: 'jsonp'}, (err, data) => {\n        err ? reject(err) : resolve(data.data.children);\n      });\n    });\n  }\n}\n```\n说到API，突然想起[codeacademy](http://www.codecademy.com/learn)上面好像又好多教学，赶紧去一下先。\n\n## Extract Pictures\n利用`Array.map`和`Array.filter`来获取和过滤图片。以前一直不知道这２个函数怎么用。\n```javascript\nexport default (posts) => {\n  return posts\n    .map(post => post.data.url)\n    .filter(url => /png$/.exec(url));\n}\n```\n\n## Display Picture\n利用了`Array.map`和`Array.json`来生成要插入的HTML string。如果我写的话，可以会用循环 = =　果然看多别人的代码还是好的。\n\n```javascript\nexport default (urls) => {\n  var pics = document.querySelector('.pics');\n  pics.innerHTML = urls.map(url => `<img src=${url}>`).join('\\n');\n}\n```\n","slug":"ES6-In-Practice-0-watch-a-demo","published":1,"updated":"2015-07-10T06:40:19.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk2y0000td32mxgnmkfr"},{"title":"gulp-in-practice","author":"Drake Leung","date":"2015-06-10T17:47:58.000Z","description":"通过研究generator-gulp-webapp这个例子, 来实践一下gulp的各种用途.","_content":"\n我们研究的例子是[generator-gulp-webapp](https://github.com/yeoman/generator-gulp-webapp/blob/master/app%2Ftemplates%2Fgulpfile.js)的gulp recipe.\n\n## Getting Start\n假设我正在开发一个项目。首先，我要用`jade`来写一个页面。那么，我们就需要[gulp-jade](https://www.npmjs.com/package/gulp-jade)来帮助把`jade`解析为`HTML`。\n```javascript\nvar gulp = require('gulp'),\n $ = require('gulp-load-plugins')();\n\ngulp.task('views', function() {\n  gulp.src('app/views/index.jade')\n    .pipe($.plumber())\n    .pipe($.jade({\n        pretty: true\n    }))\n    .pipe(gulp.dest('.tmp'));\n});\n```\n `require`是什么？他可以外部的一个模块，类似`java`的import。[详情请看]()\n\n因为我们使用了[gulp-load-plugins](https://www.npmjs.com/package/gulp-load-plugins)，他会读取`package.json`里面的`devDependencies`或者`dependencies`的内容来加载plugins。比如，这是我的`package.json`:\n```json\n{\n  \"devDependencies\": {\n    \"gulp-jade\": \"^1.0.1\"\n  }\n}\n```\n所以，我可以通过这样来加载`gulp-jade`模块\n```javascript\n $ = require('gulp-load-plugins')();\n $.jade();\n```\n否则的话，我就需要这样：\n```javascript\nvar jade = require('gulp-jade');\n```\n上面这种方法，如果插件多起来的话，就要写很多变量名。\n```javascript\nvar jade = require('..'),\n  sass = require('..'),\n  // ....\n  //...\n```\n\n然后，关于`gulp-jade`可以传哪些参数，可以看[docs](https://www.npmjs.com/package/gulp-jade#options)。\n\n最后，`$.plumber`是用来捕捉并处理错误的。\n\n## Next\n现在我想把bower_components里面的东西都inject到我的`index.jade`里面来，这样就不需要我手动写了。这个时候，我们需要用到[wiredep](https://github.com/taptapship/wiredep#gulpjs)\n```javascript\ngulp.task('wiredep', function() {\n  gulp.src('app/views/index.jade')\n    pipe(wiredep({\n        // options\n    }})\n    .pipe(gulp.dest('app/views/index.jade'));\n});\n```\n如果像上面那样式不够的，因为wiredep根本不知道要把bower_compoents里面的东西插到`index.jade`的什么位置，因此我们要指定placeholder.\n```jade\ndoctype html\n  head\n    meta(charset='utf-8')\n\n    // bower:css\n    // endbower\n\n  body\n    p Goodbye world\n\n    // bower:js\n    // endbower\n```\n`wiredep`会默认会读取`bower.json`默认的`bower_compponets`路径，接着找到每个component里面的`bower.json`里的`main`property。\n\n如果`main`里面没有指定相关的文件，`wiredep`是无法自动添加依赖到placeholder的。[docs - what can go wrong](https://github.com/taptapship/wiredep#what-can-go-wrong)\n\n举个例子：`semantic-ui`下的`bower.json`里的`main`没有指定他的CSS文件。\n```json\n{\n  \"main: [\n    \"src/semantic.less\",\n    \"dist/semantic.js\"\n  ]\n}\n```\n所以你如果按照前面写的placeholder，你可以加载到`semantic,js`，但是无法添加`semantic.css`。因为我们上面的代码写的placeholder是要求css：\n```jade\ndoctype html\nhtml\n  head\n    meta(charset='utf-8')\n    title(My blog)\n\n    // bower:css\n    // endbower\n\n  body\n    p Goodbye world\n\n    // bower:js\n    script(src='../../bower_components/jquery/dist/jquery.js')\n    script(src='../../bower_components/semantic-ui/dist/semantic.js')\n    // endbower\n```\n也就是说，我们要手动添加我们想要的文件到`main`property里面去，比如`dist/semantic.css`\n```\n{\n  \"main\": [\n    \"src/semantic.less\",\n    \"dist/semantic.js\",\n    \"dist/semantic.css\"\n  ]\n}\n```\n### Issue\n假设我们已经执行了`wiredep`任务，相关的依赖已经添加到了`index.jade`。接下来就要执行`views`任务，把jade解析成`HTML`到`.tmp`目录下。\n```html\n<!-- .tmp/index.html -->\n\n<!-- omit some tag here -->\n<body>\n  <script src=\"../../bower_components/semantic-ui/dist/semantic.js\"></script>\n</body>\n```\n如果你足够细心的话，你会发现引入的semantic的**路径是不对的**。因为`.tmp`是在根目录下面的，而本来`index.jade`实在`app/views`下面的。\n正确的应该是这样：\n```html\n<body>\n  <script src=\"/bower_components/semantic-ui/dist/semantic.js\"></script>\n</body>\n```\n所以我们要在`wiredep`的时候就要忽略掉`../..`这个字符串。\n```javascript\ngulp.task('wiredep', function() {\n  gulp.src('app/views/index.jade')\n    pipe(wiredep({\n      ignorePath: /^(\\.\\.\\/)*\\.\\./  // 去掉../..\n    }})\n    .pipe(gulp.dest('app/views/index.jade'));\n});\n```\n\n## More\n话说，你不觉得这样引入多外部文件会不好吗？这样HTTP请求就变多了。所以，我们应该要把这些依赖都concatenate在同一个文件里面去。\n\n[gulp-assets](https://www.npmjs.com/package/gulp-useref)会把HTML的build block的引用的文件concatenate在一起。\n\n```javascript\ngulp.task('html', ['views'], function() {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n\n  gulp.src(['.tmp/*.html'])\n    .pipe(assets)\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## End\n利用[gulp-subtree](https://github.com/Snugug/gulp-subtree)，把指定的目录提交奥到指定分支上面去。默认的分支是: `gh-page`。\n\n所以，我们只需要把`dist`目录发布到`gh-page`分支上，我们就可以通过`username.github.io/repo-name`来访问了。\n\n```javascript\ngulp.task('deploy', ['build'], function() {\n  eturn gulp.src('dist')\n    .pipe($.subtree())\n    .pipe($.clean());\n});\n```\n\n## Append: gulpfile.js\nhttps://gist.github.com/DrakeLeung/bd9132aa68b45c3c6794\n","source":"_posts/gulp-in-practice.md","raw":"title: gulp-in-practice\nauthor: Drake Leung\ndate: 2015-06-11 01:47:58\n\ntags: gulp\ncategories: FrontEnd\ndescription:\n  通过研究generator-gulp-webapp这个例子, 来实践一下gulp的各种用途.\n---\n\n我们研究的例子是[generator-gulp-webapp](https://github.com/yeoman/generator-gulp-webapp/blob/master/app%2Ftemplates%2Fgulpfile.js)的gulp recipe.\n\n## Getting Start\n假设我正在开发一个项目。首先，我要用`jade`来写一个页面。那么，我们就需要[gulp-jade](https://www.npmjs.com/package/gulp-jade)来帮助把`jade`解析为`HTML`。\n```javascript\nvar gulp = require('gulp'),\n $ = require('gulp-load-plugins')();\n\ngulp.task('views', function() {\n  gulp.src('app/views/index.jade')\n    .pipe($.plumber())\n    .pipe($.jade({\n        pretty: true\n    }))\n    .pipe(gulp.dest('.tmp'));\n});\n```\n `require`是什么？他可以外部的一个模块，类似`java`的import。[详情请看]()\n\n因为我们使用了[gulp-load-plugins](https://www.npmjs.com/package/gulp-load-plugins)，他会读取`package.json`里面的`devDependencies`或者`dependencies`的内容来加载plugins。比如，这是我的`package.json`:\n```json\n{\n  \"devDependencies\": {\n    \"gulp-jade\": \"^1.0.1\"\n  }\n}\n```\n所以，我可以通过这样来加载`gulp-jade`模块\n```javascript\n $ = require('gulp-load-plugins')();\n $.jade();\n```\n否则的话，我就需要这样：\n```javascript\nvar jade = require('gulp-jade');\n```\n上面这种方法，如果插件多起来的话，就要写很多变量名。\n```javascript\nvar jade = require('..'),\n  sass = require('..'),\n  // ....\n  //...\n```\n\n然后，关于`gulp-jade`可以传哪些参数，可以看[docs](https://www.npmjs.com/package/gulp-jade#options)。\n\n最后，`$.plumber`是用来捕捉并处理错误的。\n\n## Next\n现在我想把bower_components里面的东西都inject到我的`index.jade`里面来，这样就不需要我手动写了。这个时候，我们需要用到[wiredep](https://github.com/taptapship/wiredep#gulpjs)\n```javascript\ngulp.task('wiredep', function() {\n  gulp.src('app/views/index.jade')\n    pipe(wiredep({\n        // options\n    }})\n    .pipe(gulp.dest('app/views/index.jade'));\n});\n```\n如果像上面那样式不够的，因为wiredep根本不知道要把bower_compoents里面的东西插到`index.jade`的什么位置，因此我们要指定placeholder.\n```jade\ndoctype html\n  head\n    meta(charset='utf-8')\n\n    // bower:css\n    // endbower\n\n  body\n    p Goodbye world\n\n    // bower:js\n    // endbower\n```\n`wiredep`会默认会读取`bower.json`默认的`bower_compponets`路径，接着找到每个component里面的`bower.json`里的`main`property。\n\n如果`main`里面没有指定相关的文件，`wiredep`是无法自动添加依赖到placeholder的。[docs - what can go wrong](https://github.com/taptapship/wiredep#what-can-go-wrong)\n\n举个例子：`semantic-ui`下的`bower.json`里的`main`没有指定他的CSS文件。\n```json\n{\n  \"main: [\n    \"src/semantic.less\",\n    \"dist/semantic.js\"\n  ]\n}\n```\n所以你如果按照前面写的placeholder，你可以加载到`semantic,js`，但是无法添加`semantic.css`。因为我们上面的代码写的placeholder是要求css：\n```jade\ndoctype html\nhtml\n  head\n    meta(charset='utf-8')\n    title(My blog)\n\n    // bower:css\n    // endbower\n\n  body\n    p Goodbye world\n\n    // bower:js\n    script(src='../../bower_components/jquery/dist/jquery.js')\n    script(src='../../bower_components/semantic-ui/dist/semantic.js')\n    // endbower\n```\n也就是说，我们要手动添加我们想要的文件到`main`property里面去，比如`dist/semantic.css`\n```\n{\n  \"main\": [\n    \"src/semantic.less\",\n    \"dist/semantic.js\",\n    \"dist/semantic.css\"\n  ]\n}\n```\n### Issue\n假设我们已经执行了`wiredep`任务，相关的依赖已经添加到了`index.jade`。接下来就要执行`views`任务，把jade解析成`HTML`到`.tmp`目录下。\n```html\n<!-- .tmp/index.html -->\n\n<!-- omit some tag here -->\n<body>\n  <script src=\"../../bower_components/semantic-ui/dist/semantic.js\"></script>\n</body>\n```\n如果你足够细心的话，你会发现引入的semantic的**路径是不对的**。因为`.tmp`是在根目录下面的，而本来`index.jade`实在`app/views`下面的。\n正确的应该是这样：\n```html\n<body>\n  <script src=\"/bower_components/semantic-ui/dist/semantic.js\"></script>\n</body>\n```\n所以我们要在`wiredep`的时候就要忽略掉`../..`这个字符串。\n```javascript\ngulp.task('wiredep', function() {\n  gulp.src('app/views/index.jade')\n    pipe(wiredep({\n      ignorePath: /^(\\.\\.\\/)*\\.\\./  // 去掉../..\n    }})\n    .pipe(gulp.dest('app/views/index.jade'));\n});\n```\n\n## More\n话说，你不觉得这样引入多外部文件会不好吗？这样HTTP请求就变多了。所以，我们应该要把这些依赖都concatenate在同一个文件里面去。\n\n[gulp-assets](https://www.npmjs.com/package/gulp-useref)会把HTML的build block的引用的文件concatenate在一起。\n\n```javascript\ngulp.task('html', ['views'], function() {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', '.']});\n\n  gulp.src(['.tmp/*.html'])\n    .pipe(assets)\n    .pipe($.if('*.js', $.uglify()))\n    .pipe($.if('*.css', $.csso()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## End\n利用[gulp-subtree](https://github.com/Snugug/gulp-subtree)，把指定的目录提交奥到指定分支上面去。默认的分支是: `gh-page`。\n\n所以，我们只需要把`dist`目录发布到`gh-page`分支上，我们就可以通过`username.github.io/repo-name`来访问了。\n\n```javascript\ngulp.task('deploy', ['build'], function() {\n  eturn gulp.src('dist')\n    .pipe($.subtree())\n    .pipe($.clean());\n});\n```\n\n## Append: gulpfile.js\nhttps://gist.github.com/DrakeLeung/bd9132aa68b45c3c6794\n","slug":"gulp-in-practice","published":1,"updated":"2015-07-10T06:42:17.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk3e0005td32j9zx7gav"},{"title":"google chrome Devtools Overview","author":"Drake Leung","date":"2015-07-15T17:29:29.000Z","description":"学习google chrome DevTools的４个部分. 分别为Console, Elements, Network以及Sources.","_content":"\n官方文档: [Chrome DevTools](https://developer.chrome.com/devtools)\n## Console\n### Basic Operation\n- 打开: `Ctrl + Shift + J`\n- `Shift + Enter`可以换行，当你要写多行代码的时候。\n- 删除console history: `Ctrl + L`\n- drawer: 假设你在其他tab里面，想要看到`Console`tab的东西，就可以可以按`Esc`来显示drawer\n    ![](http://ww3.sinaimg.cn/large/7f85b91egw1eu3hckqtijj20rg0c8dj9.jpg)\n\n### Console API\n在DevTools里面定义了一个全局对象`console`。他有许多有用的API\n\n- 打印日志: `console.log(arg1, arg2)`。`.log()`可以有多个参数，`console.log('loved?', true)`\n\n- 打印错误日志: `console.error()`以及打印警告日志: `console.warn()`\n\n- 用CSS来style你的日志: `%c`作为指示，第2个参数写CSS。\n    ```javascript\n    console.log(\"%cThis will be formatted with large, blue text\", \"color: blue; font-size: x-large\");\n\n    console.log('%cBlue! %cRed!', 'color: blue;', 'color: red;');\n    ```\n  这样就可以在console里面写一些漂亮的彩蛋了。\n\n- 把DOM元素格式化为JavaScript对象: `console.dir()`, 如`console.dir(document)`\n\n- 测量时间: 传一个`string`作为给`.time()`作为开始，这个string就是time marker。结束\n的话就`timeEnd(string)`。string和前面的一样。\n    ```javascript\n    console.time(\"Array initialize\");\n        var array= new Array(1000000);\n        for (var i = array.length - 1; i >= 0; i--) {\n            array[i] = new Object();\n        };\n    console.timeEnd(\"Array initialize\");\n    ```\n\n### Command Line API\n- 自动补全: 比如输入`doc`就会有提示。如果是单个提示时，可以使用`tab`来补全。而多个时，按`↑`\n和`↓`进行选择，然后按`→`补全当前。\n\n- 选择元素: `$()`是`querySelector()`的简写，而`$$()`是`querySelectorAll()`\n\n- `$0~$4`保存了你在**Element tab**里面选择过的5个元素。\n\n## Network\n![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3ifwyikzj20ov08i77o.jpg)\n\n- 可以检查你的文件路径有没有写对。\n- 直播下载网易云音乐的歌曲。\n\n## Elements\n对着你想要审查的元素，鼠标右击 -> Inspect Element。或者`Ctrl + Shift + C`.\n可以随便修改删除一些标签啊，比如去掉广告浮窗，或者这样啊，\n![](http://ww1.sinaimg.cn/large/7f85b91egw1eu3g2gwgaij20dh0a4aaz.jpg)\n\n- color picker: 按`shift` + click可以切换颜色的表示方法。\n- adding new CSS rules\n- toggle element state\n    ![](http://ww4.sinaimg.cn/large/7f85b91egw1eu3gx9r0ppj20dc01r0sp.jpg)\n\n## Sources\nSources tab可以查看你的文件。\n![](http://ww3.sinaimg.cn/large/7f85b91egw1eu392veow8j20uk0rm0vv.jpg)\n\n### debugging JavaScript with breakpoints\n\n1. 按`Ctrl + P`就可以搜索我们的文件，此时会调到**Sources tab**。接着`Ctrl + Shift + O`搜索函数名, `Ctrl + G`可以跳到任意一行，或者`Ctrl + Shift + F`在所有文件中搜索文本。\n\n    ![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3fzown0oj20lo08bwgi.jpg)\n\n2. 单击**line gutter**就可以在该行设置一个breakpoint。然后你可以在右边的面板的**BreakPoints**\n找到所有设置过的breakpoint\n\n    ![](http://ww2.sinaimg.cn/large/7f85b91egw1eu39fv8s2gj20le0cd400.jpg)\n\n3. Control\n    - **Continue**: 继续执行，直到下一个breakpoint\n    - **Step over**: 下一行\n    - **Step into**: 跳进函数里面去\n    - **Step over**: 从函数里面跳出来\n    - **Toggle breakpoints**: 激活/不激活breakpoints\n\n\n4. 查看\n然后，我们就可以在**Scope Vraibles**那里查看你想要的变量。如果你有一直想看的变量，\n可以把他添加到**Watch Expressions**\n\n### Saving changes with workspaces\n把文件夹添加到workspace之后，你在DevTools上面修改的东西就会同步到实际的文件\n当中去。\n![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3d1b12tsj20ve0bl77g.jpg)\n\n这样一来，DevTools就相当于一个编辑器了。\n","source":"_posts/google-chrome-Devtools-Overview.md","raw":"title: google chrome Devtools Overview\nauthor: Drake Leung\ntags: [google chrome, devtools]\ncategories: [Tools]\ndate: 2015-07-16 01:29:29\ndescription: 学习google chrome DevTools的４个部分. 分别为Console, Elements, Network以及Sources.\n---\n\n官方文档: [Chrome DevTools](https://developer.chrome.com/devtools)\n## Console\n### Basic Operation\n- 打开: `Ctrl + Shift + J`\n- `Shift + Enter`可以换行，当你要写多行代码的时候。\n- 删除console history: `Ctrl + L`\n- drawer: 假设你在其他tab里面，想要看到`Console`tab的东西，就可以可以按`Esc`来显示drawer\n    ![](http://ww3.sinaimg.cn/large/7f85b91egw1eu3hckqtijj20rg0c8dj9.jpg)\n\n### Console API\n在DevTools里面定义了一个全局对象`console`。他有许多有用的API\n\n- 打印日志: `console.log(arg1, arg2)`。`.log()`可以有多个参数，`console.log('loved?', true)`\n\n- 打印错误日志: `console.error()`以及打印警告日志: `console.warn()`\n\n- 用CSS来style你的日志: `%c`作为指示，第2个参数写CSS。\n    ```javascript\n    console.log(\"%cThis will be formatted with large, blue text\", \"color: blue; font-size: x-large\");\n\n    console.log('%cBlue! %cRed!', 'color: blue;', 'color: red;');\n    ```\n  这样就可以在console里面写一些漂亮的彩蛋了。\n\n- 把DOM元素格式化为JavaScript对象: `console.dir()`, 如`console.dir(document)`\n\n- 测量时间: 传一个`string`作为给`.time()`作为开始，这个string就是time marker。结束\n的话就`timeEnd(string)`。string和前面的一样。\n    ```javascript\n    console.time(\"Array initialize\");\n        var array= new Array(1000000);\n        for (var i = array.length - 1; i >= 0; i--) {\n            array[i] = new Object();\n        };\n    console.timeEnd(\"Array initialize\");\n    ```\n\n### Command Line API\n- 自动补全: 比如输入`doc`就会有提示。如果是单个提示时，可以使用`tab`来补全。而多个时，按`↑`\n和`↓`进行选择，然后按`→`补全当前。\n\n- 选择元素: `$()`是`querySelector()`的简写，而`$$()`是`querySelectorAll()`\n\n- `$0~$4`保存了你在**Element tab**里面选择过的5个元素。\n\n## Network\n![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3ifwyikzj20ov08i77o.jpg)\n\n- 可以检查你的文件路径有没有写对。\n- 直播下载网易云音乐的歌曲。\n\n## Elements\n对着你想要审查的元素，鼠标右击 -> Inspect Element。或者`Ctrl + Shift + C`.\n可以随便修改删除一些标签啊，比如去掉广告浮窗，或者这样啊，\n![](http://ww1.sinaimg.cn/large/7f85b91egw1eu3g2gwgaij20dh0a4aaz.jpg)\n\n- color picker: 按`shift` + click可以切换颜色的表示方法。\n- adding new CSS rules\n- toggle element state\n    ![](http://ww4.sinaimg.cn/large/7f85b91egw1eu3gx9r0ppj20dc01r0sp.jpg)\n\n## Sources\nSources tab可以查看你的文件。\n![](http://ww3.sinaimg.cn/large/7f85b91egw1eu392veow8j20uk0rm0vv.jpg)\n\n### debugging JavaScript with breakpoints\n\n1. 按`Ctrl + P`就可以搜索我们的文件，此时会调到**Sources tab**。接着`Ctrl + Shift + O`搜索函数名, `Ctrl + G`可以跳到任意一行，或者`Ctrl + Shift + F`在所有文件中搜索文本。\n\n    ![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3fzown0oj20lo08bwgi.jpg)\n\n2. 单击**line gutter**就可以在该行设置一个breakpoint。然后你可以在右边的面板的**BreakPoints**\n找到所有设置过的breakpoint\n\n    ![](http://ww2.sinaimg.cn/large/7f85b91egw1eu39fv8s2gj20le0cd400.jpg)\n\n3. Control\n    - **Continue**: 继续执行，直到下一个breakpoint\n    - **Step over**: 下一行\n    - **Step into**: 跳进函数里面去\n    - **Step over**: 从函数里面跳出来\n    - **Toggle breakpoints**: 激活/不激活breakpoints\n\n\n4. 查看\n然后，我们就可以在**Scope Vraibles**那里查看你想要的变量。如果你有一直想看的变量，\n可以把他添加到**Watch Expressions**\n\n### Saving changes with workspaces\n把文件夹添加到workspace之后，你在DevTools上面修改的东西就会同步到实际的文件\n当中去。\n![](http://ww2.sinaimg.cn/large/7f85b91egw1eu3d1b12tsj20ve0bl77g.jpg)\n\n这样一来，DevTools就相当于一个编辑器了。\n","slug":"google-chrome-Devtools-Overview","published":1,"updated":"2015-07-15T18:17:36.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk5g000atd32vvkwefav"},{"title":"Scope(1) - Nested Scope","author":"Drake Leung","date":"2015-07-09T10:24:19.000Z","description":"scope系列的第2篇, 主题是嵌套作用域, 有block scope, function scope等等.","thumbnail":"images/js.png","_content":"\n## What\n*nested scope*就是所谓的嵌套作用域, 顾名思义就是作用域之间具有嵌套的关系.  \n那么, 为什么我们需要的nested scope呢?\n\n## Why\n我们做出一下的假设:\n\n> 从头到尾只有一个socpe, 没有什么多个, 也没有什么嵌套关系.\n\n这样的话, 我们所有的变量声明, 函数声明都会放到这个**唯一的scope**里面去. 那么, 当数量变大的时候, 程序的性能就会降低. 比如我们要在茫茫变量中找出一个小小的变量, 这性能不就降低了吗?\n\n为了改进他, 我们又做出了以下的假设:\n\n> 其实不止一个socpe, 可以有多个scope. 但是scope之间美柚嵌套关系.\n\n很容易看出, 这次的假设比第一次的好多了. 但是问题又来了, 如果2个scope所存放的变量有很多是相同的, 既然是相同的, 那么我们很容易就想到要**复用**他们. 怎么复用呢? 这个时候, 我们就给这些需要复用的scope加上一次嵌套关系:\n\n> 外部的scope嵌套着内部的scope, 内部的scope可以使用外部的scope的变量, 但反之不行!\n\n这样以来, 我们就可以不同scope之间就可以共用相同的变量. 这是极好的~  \n但是, 我们要怎样才可以创建出多个scope呢?\n\n## How\n在JavaScript中, 有3种不同的scope. 分别是**global scope**, **block scope**以及**function scope**.\n\n### Global Scope\nglobal scope(全局作用域)是不需要创建的, 只要你执行JavaScript文件的话, 他就被自动创建.\n\n他是最外层的scope. 也就是说, 他可以嵌套其他作用域, 不可以被其他scope嵌套.\n\n在浏览器环境下, global scope可以看做为`window`这个对象.\n\n### Block Scope\nblock scope(块级作用域)指的是用`{}`(大括号)创建一个scope. 也就是说, `{}`内的变量定义和声明都是属于这个`{}`所创建的scope.\n\n在ES6中, 我们可以使用`let`这个keyword来实现\n\n```javascript\n{\n  let foo = 2;\n  console.log(foo); // 2\n}\nconsole.log(foo); // Reference Error\n```\n\n但是, 在ES6之前呢? 我们要怎样才能创建一个block scope呢? 一个trick就是使用`try-catch`.\n```javascript\ntry {\n  throw 2;\n} catch (foo) {\n  console.log(foo); // 2\n}\nconsole.log(foo);  // Error\n```\n在上面的例子中, `foo`这个keyword只能在`catch`块里面使用. 但是, 这种写法也太丑了. 因此, 在ES6之前可以说是没有block scope的.\n\n## Function Scope\n当执行一个函数的时候, 就会创建一个属于这个函数的作用域. 当执行完这个函数之后, 理论上这个作用域是会被垃圾回收器回收的.\n\n```javascript\nfunction foo () {\n  var a = 42;\n\n  function bar () {\n    console.log(a);\n  }\n}\n```\n在上面的例子中, 一个有3个scope. 分别是global scope > foo > bar(`>`表示嵌套关系).  \nEngine和各个scope之间的对话.\n\nEngine: 你好`bar scope`, 我想要一个`a`的RHS, 请问你有吗?  \nbar scope: 不好意思, 我没有. 你可以去问问我的外层作用域foo scope.  \nEngine: 你好`foo scope`, 请问你有见过`a`吗?  \nfoo scope: 当然! 这就给你.\nEngine: 那太好了. 既然找到的话, 我就不需要再向上层的作用域找了.  \n\n从上面的对话中, 我们可以很容易知道: 当要查找一个变量的时候, 首先会在当前所在的作用域寻找, 如果没有找到的话, 就向上找, 直到global scope. 这个过程其实就叫做**identifier resolution**(或者identifier look-up).\n\n接下来, 我们再来优化一下上面的例子. 例子中的`bar`函数只是为了打印一个`a`, 我们以后再也不会引用到`bar`这个变量名. 但这个变量却污染了foo scope. 有没有办法既可以打印`a`又可以不创建一个变量名呢? 答案就是利用**IIFE**(Immediately invoked function express).\n```javascript\nfunction foo () {\n  var a = 42;\n\n  (function () {\n    console.log(a);\n  })();\n}\n```\n首先, 用`()`包住整个function body就表明了这个是一个expression, 接着用`()`来调用这个function expression.\n对于IIFE还有其他写法, 你可以选择自己喜欢的口味~\n\nIIFE是很常见的, 因为他在调用一个函数的同时也**避免了作用域的污染**. 这是非常值得我们学习的.\n\n## Summary\n总的来说, nested scope是为了可以共用作用域而产生的, 也就是说内部的scope可以访问外部scope. 而JavaScript有3种作用域global scope, block scope以及function scope. 其中, function scope是最主要的, 并且要懂得其中的IIFE.\n","source":"_posts/Scope-1-Nested-Scope.md","raw":"title: Scope(1) - Nested Scope\nauthor: Drake Leung\ndate: 2015-07-09 18:24:19\ntags: [scope, 作用域]\ncategories: JavaScript\ndescription:\n  scope系列的第2篇, 主题是嵌套作用域, 有block scope, function scope等等.\nthumbnail: images/js.png\n---\n\n## What\n*nested scope*就是所谓的嵌套作用域, 顾名思义就是作用域之间具有嵌套的关系.  \n那么, 为什么我们需要的nested scope呢?\n\n## Why\n我们做出一下的假设:\n\n> 从头到尾只有一个socpe, 没有什么多个, 也没有什么嵌套关系.\n\n这样的话, 我们所有的变量声明, 函数声明都会放到这个**唯一的scope**里面去. 那么, 当数量变大的时候, 程序的性能就会降低. 比如我们要在茫茫变量中找出一个小小的变量, 这性能不就降低了吗?\n\n为了改进他, 我们又做出了以下的假设:\n\n> 其实不止一个socpe, 可以有多个scope. 但是scope之间美柚嵌套关系.\n\n很容易看出, 这次的假设比第一次的好多了. 但是问题又来了, 如果2个scope所存放的变量有很多是相同的, 既然是相同的, 那么我们很容易就想到要**复用**他们. 怎么复用呢? 这个时候, 我们就给这些需要复用的scope加上一次嵌套关系:\n\n> 外部的scope嵌套着内部的scope, 内部的scope可以使用外部的scope的变量, 但反之不行!\n\n这样以来, 我们就可以不同scope之间就可以共用相同的变量. 这是极好的~  \n但是, 我们要怎样才可以创建出多个scope呢?\n\n## How\n在JavaScript中, 有3种不同的scope. 分别是**global scope**, **block scope**以及**function scope**.\n\n### Global Scope\nglobal scope(全局作用域)是不需要创建的, 只要你执行JavaScript文件的话, 他就被自动创建.\n\n他是最外层的scope. 也就是说, 他可以嵌套其他作用域, 不可以被其他scope嵌套.\n\n在浏览器环境下, global scope可以看做为`window`这个对象.\n\n### Block Scope\nblock scope(块级作用域)指的是用`{}`(大括号)创建一个scope. 也就是说, `{}`内的变量定义和声明都是属于这个`{}`所创建的scope.\n\n在ES6中, 我们可以使用`let`这个keyword来实现\n\n```javascript\n{\n  let foo = 2;\n  console.log(foo); // 2\n}\nconsole.log(foo); // Reference Error\n```\n\n但是, 在ES6之前呢? 我们要怎样才能创建一个block scope呢? 一个trick就是使用`try-catch`.\n```javascript\ntry {\n  throw 2;\n} catch (foo) {\n  console.log(foo); // 2\n}\nconsole.log(foo);  // Error\n```\n在上面的例子中, `foo`这个keyword只能在`catch`块里面使用. 但是, 这种写法也太丑了. 因此, 在ES6之前可以说是没有block scope的.\n\n## Function Scope\n当执行一个函数的时候, 就会创建一个属于这个函数的作用域. 当执行完这个函数之后, 理论上这个作用域是会被垃圾回收器回收的.\n\n```javascript\nfunction foo () {\n  var a = 42;\n\n  function bar () {\n    console.log(a);\n  }\n}\n```\n在上面的例子中, 一个有3个scope. 分别是global scope > foo > bar(`>`表示嵌套关系).  \nEngine和各个scope之间的对话.\n\nEngine: 你好`bar scope`, 我想要一个`a`的RHS, 请问你有吗?  \nbar scope: 不好意思, 我没有. 你可以去问问我的外层作用域foo scope.  \nEngine: 你好`foo scope`, 请问你有见过`a`吗?  \nfoo scope: 当然! 这就给你.\nEngine: 那太好了. 既然找到的话, 我就不需要再向上层的作用域找了.  \n\n从上面的对话中, 我们可以很容易知道: 当要查找一个变量的时候, 首先会在当前所在的作用域寻找, 如果没有找到的话, 就向上找, 直到global scope. 这个过程其实就叫做**identifier resolution**(或者identifier look-up).\n\n接下来, 我们再来优化一下上面的例子. 例子中的`bar`函数只是为了打印一个`a`, 我们以后再也不会引用到`bar`这个变量名. 但这个变量却污染了foo scope. 有没有办法既可以打印`a`又可以不创建一个变量名呢? 答案就是利用**IIFE**(Immediately invoked function express).\n```javascript\nfunction foo () {\n  var a = 42;\n\n  (function () {\n    console.log(a);\n  })();\n}\n```\n首先, 用`()`包住整个function body就表明了这个是一个expression, 接着用`()`来调用这个function expression.\n对于IIFE还有其他写法, 你可以选择自己喜欢的口味~\n\nIIFE是很常见的, 因为他在调用一个函数的同时也**避免了作用域的污染**. 这是非常值得我们学习的.\n\n## Summary\n总的来说, nested scope是为了可以共用作用域而产生的, 也就是说内部的scope可以访问外部scope. 而JavaScript有3种作用域global scope, block scope以及function scope. 其中, function scope是最主要的, 并且要懂得其中的IIFE.\n","slug":"Scope-1-Nested-Scope","published":1,"updated":"2015-07-10T06:32:04.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk6d000htd323oypjmfm"},{"title":"Scope(0) - What Is Scope","author":"Drake Leung","date":"2015-07-06T06:51:18.000Z","description":"scope系列的第1篇, 主题是从编译理论知识来讲解为什么需要scope, scope又是什么, 有什么作用.","_content":"\n下面我们会学习JavaScript的scope，也就是作用域．其实很简单~  \n在讲什么是scope之前，我们先讲讲为什么会有scope的存在．\n\n## Why\n我们都知道，一个程序最基本的功能就是对数据的基本操作，比如增删查改．\n\n这个时候，我们就要用到**变量(variable)**了．那么，我们怎么知道变量是存储在哪里的，我们又是怎样获取他的\n值，并且修改呢？\n\n这个时候，我们就需要一个*特殊的地方*来存放变量，然后我们可以在这个地方\n找到我们所需要的变量了．这个＊特殊的地方*就是scope．\n\n## What\n知道了为什么会有scope的存在，我们就很容易知道什么叫做scope了．个人认为的话，\n\n> scope就是一个地方，用来存放变量的．因此，你可以通过scope来获取变量的值，\n从而对这些变量进行基本的操作．\n\n## How It Works\n我们先来了解一些编译(compile)理论知识．\n\n首先，**compile**主要分成３个步骤．\n\n1. Lexing(Takenizing): 把一个要编译的语句分成一些有意义的taken.\n    比如`var bar = 2;`会被分成`var`, `bar`, `=` `2`．\n\n2. Parsing: 把所有的taken弄成一棵*AST*(abstract syntax tree, 抽象语法树)\n\n3. Code Generation: 生成可执行代码\n\n**我们需要明确的一点是: JavaScript的代码是\"从上到下\",\"一句一句\"的编译然后就立马执行的.**\n(注意我使用了双引号)\n\n接下来,介绍3位好机油.分别是浏览器的Engine, Compiler, Scope.\n\n- Engine: 负责分配任务,以及执行代码.\n- Compiler: 接受Engine传递的任务,编译可执行的代码返回给Engine\n- Scope: 存放变量,函数声明等.\n\n那么,让我们通过一个例子,来看看他们是如何合作的.\n\n```javascript\n// Engine will split this statement into 2 parts:\n// `var bar` and `bar = 10`.\n\nvar bar = 10;\n```\nEngine: 先把`var bar`交给Compiler.  \nCompiler: 问问Scope有没有声明过`bar`这个变量.没有的话不管他,否则让Scope声明`bar`变量.\nScope: 我这里没有`bar`, 那我就声明吧.  \n\nEngine: 我要开始执行`bar = 10`啦.Scope你好,请问你那里有没有`bar`这个变量?\nScope: 当然!刚才Compiler叫我声明了.\nEngine: 既然你`bar`的话,那我就把`10`赋值给他咯.\n\n\n## Do It\n通过Scope来查找变量,函数声明等等的过程叫做`identifier looking up`.\n\n下面，我们通过一个例子，来看看怎么一回事．\n\n```javascript\nvar bar;\nbar = 42;\n\nconsole.log(bar);\n```\n\n在第２行代码中，我们引用了`bar`这个变量，并给他赋值了`２`.\n此时，这种引用就叫做**LHS**(left hand side),也就是等号的右边．\n\n在第３行中，我们引用了`bar`这个变量的值．此时，这个引用叫做**RHS**(right hand side)，\n也就是等号的右边，准确来说是等号的非左边．\n\n那么，LHS和RHS有什么不同呢？\n\nLHS只是获取变量,不在乎这个变量对应的值是什么.例子中,我们只想把`42`赋值给`bar`.\n还有一种情况也是`LHS`: 函数的参数.\n\nRHS是为了获取变量的值!例子中,我们想要的就是把`bar`这个变量对应的值打印出来.\n\nRHS如果在scope中找不到这个变量,那么就会报错: `Reference Error`.而LHS则会给`window`\n这个全局变量添加一个属性,如果在没有使用`use strict`的情况下.比如:\n```javascript\n// 'use strict;'\nfoo = 10;\nconsole.log(foo);\n```\n在上面的例子中,很明显在scope中是找不到`foo`这个变量的.\n又由于他是LHS,所有就会有`window.foo = 10;`我们可以通过`console.log(window.hasOwnProperty('foo'))`来测试一下.\n","source":"_posts/Scope-0-What-Is-Scope.md","raw":"title: Scope(0) - What Is Scope\nauthor: Drake Leung\ndate: 2015-07-06 14:51:18\ntags: scope\ncategories: JavaScript\ndescription:\n  scope系列的第1篇, 主题是从编译理论知识来讲解为什么需要scope, scope又是什么, 有什么作用.\n---\n\n下面我们会学习JavaScript的scope，也就是作用域．其实很简单~  \n在讲什么是scope之前，我们先讲讲为什么会有scope的存在．\n\n## Why\n我们都知道，一个程序最基本的功能就是对数据的基本操作，比如增删查改．\n\n这个时候，我们就要用到**变量(variable)**了．那么，我们怎么知道变量是存储在哪里的，我们又是怎样获取他的\n值，并且修改呢？\n\n这个时候，我们就需要一个*特殊的地方*来存放变量，然后我们可以在这个地方\n找到我们所需要的变量了．这个＊特殊的地方*就是scope．\n\n## What\n知道了为什么会有scope的存在，我们就很容易知道什么叫做scope了．个人认为的话，\n\n> scope就是一个地方，用来存放变量的．因此，你可以通过scope来获取变量的值，\n从而对这些变量进行基本的操作．\n\n## How It Works\n我们先来了解一些编译(compile)理论知识．\n\n首先，**compile**主要分成３个步骤．\n\n1. Lexing(Takenizing): 把一个要编译的语句分成一些有意义的taken.\n    比如`var bar = 2;`会被分成`var`, `bar`, `=` `2`．\n\n2. Parsing: 把所有的taken弄成一棵*AST*(abstract syntax tree, 抽象语法树)\n\n3. Code Generation: 生成可执行代码\n\n**我们需要明确的一点是: JavaScript的代码是\"从上到下\",\"一句一句\"的编译然后就立马执行的.**\n(注意我使用了双引号)\n\n接下来,介绍3位好机油.分别是浏览器的Engine, Compiler, Scope.\n\n- Engine: 负责分配任务,以及执行代码.\n- Compiler: 接受Engine传递的任务,编译可执行的代码返回给Engine\n- Scope: 存放变量,函数声明等.\n\n那么,让我们通过一个例子,来看看他们是如何合作的.\n\n```javascript\n// Engine will split this statement into 2 parts:\n// `var bar` and `bar = 10`.\n\nvar bar = 10;\n```\nEngine: 先把`var bar`交给Compiler.  \nCompiler: 问问Scope有没有声明过`bar`这个变量.没有的话不管他,否则让Scope声明`bar`变量.\nScope: 我这里没有`bar`, 那我就声明吧.  \n\nEngine: 我要开始执行`bar = 10`啦.Scope你好,请问你那里有没有`bar`这个变量?\nScope: 当然!刚才Compiler叫我声明了.\nEngine: 既然你`bar`的话,那我就把`10`赋值给他咯.\n\n\n## Do It\n通过Scope来查找变量,函数声明等等的过程叫做`identifier looking up`.\n\n下面，我们通过一个例子，来看看怎么一回事．\n\n```javascript\nvar bar;\nbar = 42;\n\nconsole.log(bar);\n```\n\n在第２行代码中，我们引用了`bar`这个变量，并给他赋值了`２`.\n此时，这种引用就叫做**LHS**(left hand side),也就是等号的右边．\n\n在第３行中，我们引用了`bar`这个变量的值．此时，这个引用叫做**RHS**(right hand side)，\n也就是等号的右边，准确来说是等号的非左边．\n\n那么，LHS和RHS有什么不同呢？\n\nLHS只是获取变量,不在乎这个变量对应的值是什么.例子中,我们只想把`42`赋值给`bar`.\n还有一种情况也是`LHS`: 函数的参数.\n\nRHS是为了获取变量的值!例子中,我们想要的就是把`bar`这个变量对应的值打印出来.\n\nRHS如果在scope中找不到这个变量,那么就会报错: `Reference Error`.而LHS则会给`window`\n这个全局变量添加一个属性,如果在没有使用`use strict`的情况下.比如:\n```javascript\n// 'use strict;'\nfoo = 10;\nconsole.log(foo);\n```\n在上面的例子中,很明显在scope中是找不到`foo`这个变量的.\n又由于他是LHS,所有就会有`window.foo = 10;`我们可以通过`console.log(window.hasOwnProperty('foo'))`来测试一下.\n","slug":"Scope-0-What-Is-Scope","published":1,"updated":"2015-07-10T06:31:56.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk6h000ntd32kv5atc2v"},{"title":"JavaScript For Kids - This","date":"2015-06-09T07:09:05.000Z","author":"Drake Leung","description":"this系列第一篇, 主要讲解了this在4种模式下的不同取值.","_content":"\n## Reference\n[You dont know JavaScript - This](https://github.com/getify/You-Dont-Know-JS/blob/master/this%20&%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes) chapter\n\n## 2 Misconception\n### Itself\n第一个普遍错误就是认为`this`是指向这个`function`本身。举个例子:\n```javascript\nfunction foo() {\n  this.count++;\n}\n\nfoo.count = 0;\nfor (var i = 0; i < 5; i++) {\n  foo();\n}\n\nconsole.log(foo.count); // not 5 but 0\n```\n\n这样的话，有没有其他办法可以解决呢？如果不用`this`的话，我们可以新创建一个对象。\n```javascript\nfunction foo() {\n  data.count++;\n}\nvar data = {\n  count: 0;\n};\n\n// same to the example above\n```\n还有一个解决方法,直接用`foo`他本身。\n```javascript\nfunction foo() {\n  foo.count++;\n}\n```\n虽然上面２种方法都解决了问题，但是他们都逃避了`this`。这不是我们想要的。　　\n再来看下面的解决方法: 使用`call`。\n```javascript\nfor (var i = 0; i < 5; i++) {\n  foo.call(foo);\n}\n```\n\n### Its Scope\n还有一个误解就是认为`this`指向这个函数的作用域。\n```javascript\nfunction foo() {\n  var loved = true;\n  bar();\n}\n\nfunction bar() {\n  console.log(this.loved);\n}\n\nfoo(); // ReferenceError: loved is not defined\n```\n\n## What is this\n事实上`this`并不是在函数定义的就绑定好的(**author-time binding**)，而是在函数调用的时候才绑定好(**runtime binding**)\n\n也就是说，`this`的值跟函数的定义一毛钱的关系都没有，而是取决于函数是在哪里被调用的(**call-site**)\n```javascript\nfunction foo() {\n  bar() // call-site for bar\n}\n\nfoo()  // call-site for 'foo'\n```\n\n## 4 Rules\n上面说了`this`的值取决与函数的call-site。因此，我们总结了４种**invoke pattern**(not define pattern)\n\n### Default Binding\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar loved = true;\n\nfoo(); // true\n```\n从上面的例子可以看出，`this`是指向`global object`(or `window`)。也就是说，当一个函数以**函数名加括号**(`foo()`)的这个形式被调用的话，他的`this`就指向`globol object`。\n\nP.S.如果在严格模式下, `this`的值会是`undefined`而不是`global object`。\n\n### Implicit Binding\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true,\n  foo: foo\n};\n\nex.foo();  // true\n```\n如果是调用一个对象的方法的话，`this`就隐式地指向这个对象本身。所以上面的`this`指向`ex`对象。并且是指向离他最近的对象，就近原则。所以下面的例子`this`是指向`next`而不是`ex`。\n```javascript\nvar ex = {\n  loved: true,\n  next: {\n    loved: false,\n    foo: foo\n  }\n};\n\nex.next.foo(); // not true but false\n```\n**但，这个隐式绑定有可能会出现意外**。尤其是传给一个callback function的时候。\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true,\n  foo: foo\n};\n\nwindow.loved = false;\nsetTimeout(ex.foo, 100); // false\n```\n其实`setTiemout`的函数是这样的:\n```javascript\nfunction setTimeout(fn, delay) {\n  // something\n  fn();  // call-site !!!\n}\n```\n由于`fn()`这种invoke pattern属于第一种，所以他是绑定到`global object`。\n\n虽然`this`的值是符合我们所讲的，但是这并不是我想要的东西，因为我想打印出就是`ex.loved`这个field，而不是`global object`。\n\n### Explicit Binding\n我们将会使用到`call`, `apply`和`bind`。\n\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true\n}\n\nfoo.call(ex); // true\n```\n\n那么，我们要怎样解决上面那个问题呢？我们需要**hard binding**。  \n我们需要用另外一个函数来作为wrapper，\n```javascript\nfunction bar() {\n  foo.call(ex);\n}\n\nbar(); // true\nsetTimeout(bar, 100); // true\nbar.call(window); // true\n```\n\n因为*hard binding*经常用，所以ES5提供了一个方法: `bind()`。因此，我们可以这样:\n```javascript\nvar bar = foo.bind(ex);\nsetTimeout(bar, 100); // true\n```\n### New Binding\n当一个函数在调用的时候前面有个`new` keyword，`this`就被绑定到这个constructed object。\n```javascript\nfunction Ex() {\n  this.loved = true;\n}\nvar ex = new Ex();\nconsole.log(ex.loved);\n```\n既然`this`怎么麻烦，为什么就不能简单一点啊？\n\n## Arrow function\n在`=>`中，`this`是绑定在**lexical scope**，也就是`this`取决于函数在哪里定义，而不是函数在哪里调用。并且，`this`一旦决定是不会改变的，也就是说`call`, `bind`这些方法都不起作用了。\n```javascript\nvar ex = {\n  loved: true,\n\n  foo() {\n    setTimeout(() => {\n      console.log(this.loved);\n    }, 10.24);\n  }\n}\n\nex.foo(); // true\n```\n","source":"_posts/JavaScript-For-Kids-This.md","raw":"title: JavaScript For Kids - This\ndate: 2015-06-09 15:09:05\n\nauthor: Drake Leung\ntags: This\ncategories: JavaScript\ndescription:\n  this系列第一篇, 主要讲解了this在4种模式下的不同取值.\n---\n\n## Reference\n[You dont know JavaScript - This](https://github.com/getify/You-Dont-Know-JS/blob/master/this%20&%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes) chapter\n\n## 2 Misconception\n### Itself\n第一个普遍错误就是认为`this`是指向这个`function`本身。举个例子:\n```javascript\nfunction foo() {\n  this.count++;\n}\n\nfoo.count = 0;\nfor (var i = 0; i < 5; i++) {\n  foo();\n}\n\nconsole.log(foo.count); // not 5 but 0\n```\n\n这样的话，有没有其他办法可以解决呢？如果不用`this`的话，我们可以新创建一个对象。\n```javascript\nfunction foo() {\n  data.count++;\n}\nvar data = {\n  count: 0;\n};\n\n// same to the example above\n```\n还有一个解决方法,直接用`foo`他本身。\n```javascript\nfunction foo() {\n  foo.count++;\n}\n```\n虽然上面２种方法都解决了问题，但是他们都逃避了`this`。这不是我们想要的。　　\n再来看下面的解决方法: 使用`call`。\n```javascript\nfor (var i = 0; i < 5; i++) {\n  foo.call(foo);\n}\n```\n\n### Its Scope\n还有一个误解就是认为`this`指向这个函数的作用域。\n```javascript\nfunction foo() {\n  var loved = true;\n  bar();\n}\n\nfunction bar() {\n  console.log(this.loved);\n}\n\nfoo(); // ReferenceError: loved is not defined\n```\n\n## What is this\n事实上`this`并不是在函数定义的就绑定好的(**author-time binding**)，而是在函数调用的时候才绑定好(**runtime binding**)\n\n也就是说，`this`的值跟函数的定义一毛钱的关系都没有，而是取决于函数是在哪里被调用的(**call-site**)\n```javascript\nfunction foo() {\n  bar() // call-site for bar\n}\n\nfoo()  // call-site for 'foo'\n```\n\n## 4 Rules\n上面说了`this`的值取决与函数的call-site。因此，我们总结了４种**invoke pattern**(not define pattern)\n\n### Default Binding\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar loved = true;\n\nfoo(); // true\n```\n从上面的例子可以看出，`this`是指向`global object`(or `window`)。也就是说，当一个函数以**函数名加括号**(`foo()`)的这个形式被调用的话，他的`this`就指向`globol object`。\n\nP.S.如果在严格模式下, `this`的值会是`undefined`而不是`global object`。\n\n### Implicit Binding\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true,\n  foo: foo\n};\n\nex.foo();  // true\n```\n如果是调用一个对象的方法的话，`this`就隐式地指向这个对象本身。所以上面的`this`指向`ex`对象。并且是指向离他最近的对象，就近原则。所以下面的例子`this`是指向`next`而不是`ex`。\n```javascript\nvar ex = {\n  loved: true,\n  next: {\n    loved: false,\n    foo: foo\n  }\n};\n\nex.next.foo(); // not true but false\n```\n**但，这个隐式绑定有可能会出现意外**。尤其是传给一个callback function的时候。\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true,\n  foo: foo\n};\n\nwindow.loved = false;\nsetTimeout(ex.foo, 100); // false\n```\n其实`setTiemout`的函数是这样的:\n```javascript\nfunction setTimeout(fn, delay) {\n  // something\n  fn();  // call-site !!!\n}\n```\n由于`fn()`这种invoke pattern属于第一种，所以他是绑定到`global object`。\n\n虽然`this`的值是符合我们所讲的，但是这并不是我想要的东西，因为我想打印出就是`ex.loved`这个field，而不是`global object`。\n\n### Explicit Binding\n我们将会使用到`call`, `apply`和`bind`。\n\n```javascript\nfunction foo() {\n  console.log(this.loved);\n}\n\nvar ex = {\n  loved: true\n}\n\nfoo.call(ex); // true\n```\n\n那么，我们要怎样解决上面那个问题呢？我们需要**hard binding**。  \n我们需要用另外一个函数来作为wrapper，\n```javascript\nfunction bar() {\n  foo.call(ex);\n}\n\nbar(); // true\nsetTimeout(bar, 100); // true\nbar.call(window); // true\n```\n\n因为*hard binding*经常用，所以ES5提供了一个方法: `bind()`。因此，我们可以这样:\n```javascript\nvar bar = foo.bind(ex);\nsetTimeout(bar, 100); // true\n```\n### New Binding\n当一个函数在调用的时候前面有个`new` keyword，`this`就被绑定到这个constructed object。\n```javascript\nfunction Ex() {\n  this.loved = true;\n}\nvar ex = new Ex();\nconsole.log(ex.loved);\n```\n既然`this`怎么麻烦，为什么就不能简单一点啊？\n\n## Arrow function\n在`=>`中，`this`是绑定在**lexical scope**，也就是`this`取决于函数在哪里定义，而不是函数在哪里调用。并且，`this`一旦决定是不会改变的，也就是说`call`, `bind`这些方法都不起作用了。\n```javascript\nvar ex = {\n  loved: true,\n\n  foo() {\n    setTimeout(() => {\n      console.log(this.loved);\n    }, 10.24);\n  }\n}\n\nex.foo(); // true\n```\n","slug":"JavaScript-For-Kids-This","published":1,"updated":"2015-07-10T06:43:19.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cic7bgk6k000qtd32ah15zvz2"}],"PostAsset":[],"PostCategory":[{"post_id":"cic7bgk2y0000td32mxgnmkfr","category_id":"cic7bgk340001td323iwidy53","_id":"cic7bgk370004td32vjm4l0fw"},{"post_id":"cic7bgk3e0005td32j9zx7gav","category_id":"cic7bgk3h0006td32yah2cvtf","_id":"cic7bgk3i0009td32nam1wluo"},{"post_id":"cic7bgk5g000atd32vvkwefav","category_id":"cic7bgk5h000btd325sznpzz4","_id":"cic7bgk5j000etd32tbl37jo9"},{"post_id":"cic7bgk6d000htd323oypjmfm","category_id":"cic7bgk340001td323iwidy53","_id":"cic7bgk6f000itd3269uhbj7t"},{"post_id":"cic7bgk6h000ntd32kv5atc2v","category_id":"cic7bgk340001td323iwidy53","_id":"cic7bgk6i000otd326wk7rifa"},{"post_id":"cic7bgk6k000qtd32ah15zvz2","category_id":"cic7bgk340001td323iwidy53","_id":"cic7bgk6l000rtd3278jzs5rj"}],"PostTag":[{"post_id":"cic7bgk2y0000td32mxgnmkfr","tag_id":"cic7bgk340002td32x7ng2rr3","_id":"cic7bgk360003td32n7ljg040"},{"post_id":"cic7bgk3e0005td32j9zx7gav","tag_id":"cic7bgk3h0007td32st36giz7","_id":"cic7bgk3i0008td32x14zd3m7"},{"post_id":"cic7bgk5g000atd32vvkwefav","tag_id":"cic7bgk5i000ctd32s05zn37p","_id":"cic7bgk5j000ftd32fhqu08a0"},{"post_id":"cic7bgk5g000atd32vvkwefav","tag_id":"cic7bgk5i000dtd32qofdjdau","_id":"cic7bgk5j000gtd32o27m1l8z"},{"post_id":"cic7bgk6d000htd323oypjmfm","tag_id":"cic7bgk6f000jtd328finh791","_id":"cic7bgk6f000ltd32gflaa4xr"},{"post_id":"cic7bgk6d000htd323oypjmfm","tag_id":"cic7bgk6f000ktd325lf6ycls","_id":"cic7bgk6g000mtd32jja1w2z7"},{"post_id":"cic7bgk6h000ntd32kv5atc2v","tag_id":"cic7bgk6f000jtd328finh791","_id":"cic7bgk6j000ptd32dzh5sf8m"},{"post_id":"cic7bgk6k000qtd32ah15zvz2","tag_id":"cic7bgk6l000std32eijvuy0q","_id":"cic7bgk6l000ttd323h25is5j"}],"Tag":[{"name":"ES6","_id":"cic7bgk340002td32x7ng2rr3"},{"name":"gulp","_id":"cic7bgk3h0007td32st36giz7"},{"name":"google chrome","_id":"cic7bgk5i000ctd32s05zn37p"},{"name":"devtools","_id":"cic7bgk5i000dtd32qofdjdau"},{"name":"scope","_id":"cic7bgk6f000jtd328finh791"},{"name":"作用域","_id":"cic7bgk6f000ktd325lf6ycls"},{"name":"This","_id":"cic7bgk6l000std32eijvuy0q"}]}}